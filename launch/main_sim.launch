<?xml version="1.0"?>
<launch>
    
    <!-- Modified from https://github.com/PX4/PX4-Autopilot/blob/main/launch/mavros_posix_sitl.launch -->
    
    <!-- UAS pose -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <!-- RGV params -->
    <arg name="rgvs" default="true"/>
    <arg name="rgv1_x" default="2"/>
    <arg name="rgv1_y" default="2"/>
    <arg name="rgv1_Y" default="0"/>
    <arg name="rgv2_x" default="-2"/>
    <arg name="rgv2_y" default="-2"/>
    <arg name="rgv2_Y" default="1.57079632679"/>
    <!-- UAS model and world -->
    <arg name="world" default="$(find rosardvarcsim)/worlds/main_sim_world.world"/>
    <arg name="sdf" default="$(find rosardvarcsim)/models/ardvarc_drone/ardvarc_drone.sdf"/>

    <!-- Gazebo configs -->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    <!-- MAVROS configs -->
    <arg name="fcu_url" default="udp://:14540@localhost:14557"/>
    <arg name="respawn_mavros" default="false"/>
    <!-- PX4 configs -->
    <arg name="interactive" default="true"/>

    <!-- PX4 SITL -->
    <env name="PX4_SIM_MODEL" value="gazebo-classic_typhoon_h480" />
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>
    <node name="sitl" pkg="px4" type="px4" output="screen"
        args="$(find px4)/build/px4_sitl_default/etc -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>

    <!-- Gazebo -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
    <!-- Add UAS model to Gazebo -->
    <node name="uas_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg sdf) -model ardvarc_drone -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>

    <!-- MAVROS -->
    <include file="$(find mavros)/launch/px4.launch">
        <!-- GCS link is provided by SITL -->
        <arg name="gcs_url" value=""/>
        <arg name="fcu_url" value="$(arg fcu_url)"/>
        <arg name="respawn_mavros" value="$(arg respawn_mavros)"/>
    </include>
    
    <group if="$(arg rgvs)">
        <!-- Add RGV models to Gazebo -->
        <node name="rgv1_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(find rosardvarcsim)/models/rgv1/rgv1.sdf -model rgv1 -x $(arg rgv1_x) -y $(arg rgv1_y) -z 0 -R 0 -P 0 -Y $(arg rgv1_Y)"/>
        <node name="rgv2_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(find rosardvarcsim)/models/rgv2/rgv2.sdf -model rgv2 -x $(arg rgv2_x) -y $(arg rgv2_y) -z 0 -R 0 -P 0 -Y $(arg rgv2_Y)"/>
        
        <!-- Add RGV controller nodes -->
        <node name="rgv1_controller" pkg="rosardvarcsim" type="rgv_controller.py" output="screen">
            <param name="rgv_name" type="string" value="rgv1"/>
            <param name="x0" type="double" value="$(arg rgv1_x)"/>
            <param name="y0" type="double" value="$(arg rgv1_y)"/>
            <param name="Y0" type="double" value="$(arg rgv1_Y)"/>
            <param name="seed" type="int" value="1"/>
        </node>
        <node name="rgv2_controller" pkg="rosardvarcsim" type="rgv_controller.py" output="screen">
            <param name="rgv_name" type="string" value="rgv2"/>
            <param name="x0" type="double" value="$(arg rgv2_x)"/>
            <param name="y0" type="double" value="$(arg rgv2_y)"/>
            <param name="Y0" type="double" value="$(arg rgv2_Y)"/>
            <param name="seed" type="int" value="2"/>
        </node>
        
        <!-- Add bluetooth data generator -->
        <node name="fake_bluetooth" pkg="rosardvarcsim" type="fake_bluetooth.py" output="screen"/>
    </group>
</launch>